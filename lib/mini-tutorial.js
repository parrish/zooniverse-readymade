// Generated by CoffeeScript 1.8.0
(function() {
  var $, MiniTutorial,
    __modulo = function(a, b) { return (+a % (b = +b) + b) % b; };

  $ = window.jQuery;

  MiniTutorial = (function() {
    var steps;

    MiniTutorial.prototype.CLOSE_EVENT = 'mini-tutorial:close';

    steps = [];

    MiniTutorial.prototype.closeLabel = '&times;';

    MiniTutorial.prototype.previousLabel = 'Previous';

    MiniTutorial.prototype.nextLabel = 'Next';

    MiniTutorial.prototype.finishLabel = 'Finished';

    MiniTutorial.prototype.index = 0;

    MiniTutorial.prototype.template = function() {
      var i, step;
      return "<button type='button' name='readymade-mini-tutorial-close'>" + this.closeLabel + "</button> <div class='readymade-mini-tutorial-images'> " + (((function() {
        var _i, _len, _ref, _results;
        _ref = this.steps;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          step = _ref[_i];
          _results.push("<img src='" + step.image + "' class='readymade-mini-tutorial-image' />");
        }
        return _results;
      }).call(this)).join('\n')) + " </div> <div class='readymade-mini-tutorial-contents'> " + (((function() {
        var _i, _len, _ref, _results;
        _ref = this.steps;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          step = _ref[_i];
          _results.push("<div class='readymade-mini-tutorial-content'>" + step.content + "</div>");
        }
        return _results;
      }).call(this)).join('\n')) + " </div> <div class='readymade-mini-tutorial-actions'> <button type='button' name='readymade-mini-tutorial-previous'> <span class='readymade-mini-tutorial-button-label'>" + this.previousLabel + "</span> </button> <button type='button' name='readymade-mini-tutorial-next'> <span class='readymade-mini-tutorial-button-label'>" + this.nextLabel + "</span> </button> <button type='button' name='readymade-mini-tutorial-finish'> <span class='readymade-mini-tutorial-button-label'>" + this.finishLabel + "</span> </button> </div> <div class='readymade-mini-tutorial-steppers'> " + (((function() {
        var _i, _len, _ref, _results;
        _ref = this.steps;
        _results = [];
        for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
          step = _ref[i];
          _results.push("<button type='button' name='readymade-mini-tutorial-stepper' value='" + i + "'> <span class='readymade-mini-tutorial-button-label'>" + (i + 1) + "</span> </button>");
        }
        return _results;
      }).call(this)).join('\n')) + " </div>";
    };

    function MiniTutorial(options) {
      var key, value;
      for (key in options) {
        value = options[key];
        this[key] = value;
      }
      if (this.el == null) {
        this.el = document.createElement('div');
      }
      this.el.classList.add('readymade-mini-tutorial-underlay');
      this.close();
      if (this.dialog == null) {
        this.dialog = document.createElement('div');
      }
      this.dialog.classList.add('readymade-mini-tutorial-dialog');
      this.dialog.insertAdjacentHTML('afterBegin', this.template());
      this.images = this.dialog.querySelectorAll('.readymade-mini-tutorial-image');
      this.contents = this.dialog.querySelectorAll('.readymade-mini-tutorial-content');
      this.previousButton = this.dialog.querySelector('[name="readymade-mini-tutorial-previous"]');
      this.nextButton = this.dialog.querySelector('[name="readymade-mini-tutorial-next"]');
      this.finishButton = this.dialog.querySelector('[name="readymade-mini-tutorial-finish"]');
      this.steppers = this.dialog.querySelectorAll('[name="readymade-mini-tutorial-stepper"]');
      $(this.el).on('click', '[name="readymade-mini-tutorial-close"]', this.close.bind(this));
      $(this.el).on('click', '[name="readymade-mini-tutorial-previous"]', this.previous.bind(this));
      $(this.el).on('click', '[name="readymade-mini-tutorial-next"]', this.next.bind(this));
      $(this.el).on('click', '[name="readymade-mini-tutorial-finish"]', this.close.bind(this));
      $(this.el).on('click', '[name="readymade-mini-tutorial-stepper"]', (function(_this) {
        return function(e) {
          return _this.goTo(parseFloat(e.target.value));
        };
      })(this));
      this.el.appendChild(this.dialog);
      this.goTo(this.index);
    }

    MiniTutorial.prototype.goTo = function(index) {
      var element, elements, i, lastStep, _i, _j, _len, _len1, _ref;
      this.index = index;
      this.index = __modulo(this.index, this.steps.length);
      _ref = [this.images, this.contents, this.steppers];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        elements = _ref[_i];
        for (i = _j = 0, _len1 = elements.length; _j < _len1; i = ++_j) {
          element = elements[i];
          if (i === index) {
            element.setAttribute('data-readymade-active', true);
          } else {
            element.removeAttribute('data-readymade-active');
          }
        }
      }
      this.previousButton.disabled = this.index === 0;
      lastStep = this.steps.length - 1;
      this.nextButton.disabled = this.index === lastStep;
      this.finishButton.disabled = this.index !== lastStep;
    };

    MiniTutorial.prototype.previous = function() {
      this.goTo(this.index - 1);
    };

    MiniTutorial.prototype.next = function() {
      this.goTo(this.index + 1);
      return;
      return this.dialog.querySelector('button').focus();
    };

    MiniTutorial.prototype.open = function() {
      this.el.setAttribute('data-transitioning', true);
      setTimeout((function(_this) {
        return function() {
          _this.el.setAttribute('data-open', true);
          return _this.el.removeAttribute('data-transitioning');
        };
      })(this));
    };

    MiniTutorial.prototype.close = function() {
      this.el.setAttribute('data-transitioning', true);
      this.el.removeAttribute('data-open');
      setTimeout(this.el.removeAttribute.bind(this.el, 'data-transitioning'), 250);
      $(this.el).trigger(this.CLOSE_EVENT);
    };

    return MiniTutorial;

  })();

  module.exports = MiniTutorial;

}).call(this);
